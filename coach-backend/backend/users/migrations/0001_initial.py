# Generated by Django 4.2.10 on 2024-12-13 05:48

import backend.users.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(default='John Doe', max_length=255, verbose_name='Full Name')),
                ('first_name', models.CharField(default='John', max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(default='Doe', max_length=255, verbose_name='Last Name')),
                ('user_type', models.CharField(choices=[('User', 'Coach'), ('Client', 'Client')], default='Client', max_length=50, verbose_name='User Type')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('address', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('avatar_image', models.ImageField(blank=True, null=True, upload_to='user_images/', verbose_name='User Image')),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='banner_images/', verbose_name='Banner Image')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name='Years of Experience')),
                ('specialization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Specialization')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', backend.users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Qualification Name')),
                ('year', models.PositiveIntegerField(verbose_name='Year Obtained')),
            ],
        ),
        migrations.CreateModel(
            name='UserQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='users.qualification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'qualification')},
            },
        ),
    ]
